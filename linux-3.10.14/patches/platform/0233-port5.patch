Index: linux-3.10.14/drivers/net/raeth/ra2882ethreg.h
===================================================================
--- linux-3.10.14.orig/drivers/net/raeth/ra2882ethreg.h
+++ linux-3.10.14/drivers/net/raeth/ra2882ethreg.h
@@ -36,6 +36,8 @@
 #define EV_MARVELL_PHY_ID1 0x0CC2  
 #define EV_VTSS_PHY_ID0 0x0007
 #define EV_VTSS_PHY_ID1 0x0421
+#define EV_BCM_PHY_ID0 0x600D
+#define EV_BCM_PHY_ID1 0x84A0
 
 /*
      FE_INT_STATUS
Index: linux-3.10.14/drivers/net/raeth/ra_mac.c
===================================================================
--- linux-3.10.14.orig/drivers/net/raeth/ra_mac.c
+++ linux-3.10.14/drivers/net/raeth/ra_mac.c
@@ -200,7 +200,7 @@ void enable_auto_negotiate(int unused)
 	*(unsigned long *)(RALINK_ETH_SW_BASE+0x3400) = 0x56330;
 #endif
 #if defined (CONFIG_P5_MAC_TO_PHY_MODE)
-	*(unsigned long *)(RALINK_ETH_SW_BASE+0x3500) = 0x56330;
+	//*(unsigned long *)(RALINK_ETH_SW_BASE+0x3500) = 0x56330;
 #endif
 }
 #elif defined (CONFIG_RALINK_RT2880) || defined(CONFIG_RALINK_RT3883) || \
Index: linux-3.10.14/drivers/net/raeth/raether.c
===================================================================
--- linux-3.10.14.orig/drivers/net/raeth/raether.c
+++ linux-3.10.14/drivers/net/raeth/raether.c
@@ -246,6 +246,47 @@ void skb_dump(struct sk_buff* sk) {
 #endif
 
 
+#if defined (CONFIG_P5_MAC_TO_PHY_MODE)
+int isBcmGigaPHY(int ge)
+{
+    u32 phy_id0 = 0, phy_id1 = 0;
+
+#ifdef CONFIG_GE2_RGMII_AN
+    if (ge == 2) {
+        if (!mii_mgr_read(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR2, 2, &phy_id0)) {
+            printk("\n Read PhyID 1 is Fail!!\n");
+            phy_id0 =0;
+        }
+        if (!mii_mgr_read(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR2, 3, &phy_id1)) {
+            printk("\n Read PhyID 1 is Fail!!\n");
+            phy_id1 = 0;
+        }
+    }
+    else
+#endif
+#if defined (CONFIG_GE1_RGMII_AN) || defined (CONFIG_P5_MAC_TO_PHY_MODE)
+    {
+        if (!mii_mgr_read(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 2, &phy_id0)) {
+            printk("\n Read PhyID 0 is Fail!!\n");
+            phy_id0 =0;
+        }
+        if (!mii_mgr_read(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 3, &phy_id1)) {
+            printk("\n Read PhyID 0 is Fail!!\n");
+            phy_id1 = 0;
+        }
+    }
+#endif
+
+    if ((phy_id0 == EV_BCM_PHY_ID0) && ((phy_id1 & 0xfff0) == EV_BCM_PHY_ID1))
+        return 1;
+    return 0;
+    if ((phy_id0 == EV_BCM_PHY_ID0) && ((phy_id1 & 0xfff0) == EV_BCM_PHY_ID1))
+        return 1;
+    return 0;
+
+
+}
+#endif
 
 #if defined (CONFIG_GIGAPHY) || defined (CONFIG_P5_MAC_TO_PHY_MODE) ||  defined (CONFIG_P4_MAC_TO_PHY_MODE)
 int isICPlusGigaPHY(int ge)
@@ -1434,7 +1475,7 @@ static void esw_link_status_changed(int 
 	    schedule_work(&ei_local->kill_sig_wq);
 	}
 #elif defined (CONFIG_WAN_AT_P4)
-	if(port_no==4) {
+	if(port_no==4 || port_no==5) {
 	    schedule_work(&ei_local->kill_sig_wq);
 	}
 #endif
@@ -3850,6 +3891,24 @@ void rt_gsw_init(void)
 		mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 28, phy_val);
 		mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 31, 0x0000); //main registers
         }
+        else if (isBcmGigaPHY(1))
+        {
+            mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 28, 0x8C00);
+            mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 24, 0xF1E7);
+        
+            mii_mgr_read(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 4, &phy_val);
+            phy_val |= 1<<10; //enable pause ability
+            mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 4, phy_val);
+        
+            mii_mgr_read(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 0, &phy_val);
+            phy_val |= 1<<9; //restart AN
+            mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 0, phy_val);
+        
+            //set LED
+            mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 28, 0xB86A);
+            mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 23, 0x0F05);
+            mii_mgr_write(CONFIG_MAC_TO_GIGAPHY_MODE_ADDR, 21, 0x01C8);
+        }
 
 
 #elif defined (CONFIG_P5_RMII_TO_MAC_MODE)
