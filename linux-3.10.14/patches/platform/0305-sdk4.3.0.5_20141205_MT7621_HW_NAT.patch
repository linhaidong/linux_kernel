Index: linux-3.10.14/net/nat/hw_nat/ra_nat.c
===================================================================
--- linux-3.10.14.orig/net/nat/hw_nat/ra_nat.c
+++ linux-3.10.14/net/nat/hw_nat/ra_nat.c
@@ -154,6 +154,13 @@ static int FoeAllocTbl(uint32_t NumOfEnt
 {
 	uint32_t FoeTblSize;
 
+#if defined (CONFIG_RA_HW_NAT_IPV6) && defined (CONFIG_RALINK_MT7621)
+	struct FoeEntry *foe_entry;
+	int boundary_entry_offset[7] = {12, 25, 38, 51, 76, 89, 102};/*these entries are bad every 128 entries*/
+	int entry_base = 0;
+	int bad_entry, i, j;
+#endif
+
 	FoeTblSize = NumOfEntry * sizeof(struct FoeEntry);
 
 	PpeFoeBase = dma_alloc_coherent(NULL, FoeTblSize, &PpePhyFoeBase, GFP_KERNEL);
@@ -165,6 +172,17 @@ static int FoeAllocTbl(uint32_t NumOfEnt
 	RegWrite(PPE_FOE_BASE, PpePhyFoeBase);
 	memset(PpeFoeBase, 0, FoeTblSize);
 
+#if defined (CONFIG_RA_HW_NAT_IPV6) && defined (CONFIG_RALINK_MT7621)
+	for(i=0; entry_base < NumOfEntry; i++) {
+		/* set bad entries as static*/
+		for(j=0;j<7;j++){
+		bad_entry = entry_base + boundary_entry_offset[j];
+		foe_entry = &PpeFoeBase[bad_entry];
+		foe_entry->udib1.sta = 1;
+	}
+	entry_base = (i+1)*128;
+	}
+#endif
 	return 1;
 }
 
